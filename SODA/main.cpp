//
// @Author: J Brown (@DrMelon)
//
//_____/\\\\\\\\\\\_______________/\\\\\___________ /\\\\\\\\\\\\_____________ /\\\\\\\\\_____________
//____/\\\/////////\\\___________/\\\///\\\__________\/\\\////////\\\__________/\\\\\\\\\\\\\_________
//____\//\\\______\///__________/\\\/__\///\\\________\/\\\______\//\\\________/\\\/////////\\\_______
//______\////\\\________________/\\\______\//\\\_______\/\\\_______\/\\\_______\/\\\_______\/\\\______ 
//__________\////\\\____________\/\\\_______\/\\\_______\/\\\_______\/\\\_______\/\\\\\\\\\\\\\\\_____
//______________\////\\\_________\//\\\______/\\\________\/\\\_______\/\\\_______\/\\\/////////\\\____
//________/\\\______\//\\\_________\///\\\__/\\\__________\/\\\_______/\\\________\/\\\_______\/\\\___
//________\///\\\\\\\\\\\/____/\\\____\///\\\\\/______/\\\_\/\\\\\\\\\\\\/____/\\\_\/\\\_______\/\\\__
//___________\///////////_____\///_______\/////_______\///__\////////////_____\///__\///________\///__
//
//  ------------------------(c) DrMelon 2016 -----------S. O. D. A. --------------------------------
//  ------------------------------------------------------------------------------------------------
//  -- A ROGUELIKE THAT I MADE IN MY SPARE TIME DURING MY FIRST GAMEDEV JOB. THE NAME STANDS FOR: --
//  --                          "(S)OMETHING (O)DD, (D)AYS (A)WAY"                                --
//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
//
//  Source Code, Ver. 0.0.1: July 2016
//  Dependencies: libtcod
// 
//

#include <libtcod/libtcod.hpp>
#include <memory>


#include "StateMachine.h"

// Application Entry Point: Here we kick off the state machine.


int main()
{
	// Create state machine.
	std::shared_ptr<StateMachine> stateMachine = std::make_shared<StateMachine>();

	// Init state machine.
	stateMachine->Initialize();

	// Main Loop
	while (stateMachine->Running())
	{
		stateMachine->Update();
		stateMachine->Render();
	}

	// End
	

	return 0;
}